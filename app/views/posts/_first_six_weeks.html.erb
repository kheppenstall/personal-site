<p>In October I began the 7-month Back-End Engineering Program at the Turing School of 	Software and Design. After three years of teaching algebra to 8th graders in Denver, I decided to enroll at Turing and make a career switch into software development.  Although life is notably less exciting among adults than 13-year olds, so far I could not be more pleased with my experience at Turing. </p>
<p>Our first 6 weeks focused on learning Ruby. We started with the basics of object-oriented programming and fundamental ruby syntax before progressing through enumerables and test-driven development. I started off a testing skeptic (and mainly wrote them retroactively for the first few projects) before succumbing to the pressure of my instructors. And by the end of the module I reluctantly started to grasp the importance of testing in good design. </p>
<p>Turing’s curriculum was stacked with interesting projects. Just in the first six weeks we wrote sorting algorithms, created a movie database with a binary search tree, made an autocomplete function with a tries, hosted a game on our first web server, and parsed data from csv files to conduct business analytics for an online store.</p>
<p>My favorite technical concept was our exploration of data structures. We made a binary search tree to store data on movies with the score of the movie as our key. The next week we used a trie to store all the English dictionary and create an autocomplete like your phone might use when writing a text message. Our progression from binary search trees to tries made sense since the fact the a node in a binary search tree can only have two children made its implementation far simpler. On the other hand, a node in a trie can have any number of children (we had up to 26 in our dictionary). The other key difference between binary search trees and tries is that nodes in a trie do not store their key. Instead nodes are defined by their position in the tree. In our example a node in the binary search tree stored its movie title and score. Conversely nodes in the trie were defined by the sequence of parent nodes leading down to the letter (the node for ‘g’ in the word ‘pig’ is defined by its placement below ‘pi’ in the trie). I love graphs so tune back in for another blog post discussing applications of different types of search trees.</p>
<p>What I enjoy about Turing even more than the projects is the community approach to learning. The culture at Turing places a special emphasis on collaborative learning and pairing sessions. The difficulty of the projects means that our entire cohort is often staying late to problem solve together. This collective struggle with such a diverse, passionate group of people has been the highlight of my first six weeks with Turing.</p>